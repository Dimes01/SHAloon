/// @file 
/// @brief ViPNet специфика криптографических интерфейсов CSP и CNG
///
/// @copyright Copyright (c) InfoTeCS. All Rights Reserved.

#ifndef _ITC_IMPORT_ITCS_CRYPT_BASE_H_
#define _ITC_IMPORT_ITCS_CRYPT_BASE_H_

// ==================================================================
// Типы алгоритмов (см. GET_ALG_TYPE из WinCrypt).
// ==================================================================

/// Тип алгоритма подписи
#define ALG_TYPE_GR3410                         (7 << 9)

// ==================================================================
// SID(ы) алгоритмов (см. GET_ALG_SID из WinCrypt).
// ==================================================================
// ГОСТ 28147-89, ГОСТ Р 34.11-94, ГОСТ Р 34.10-2001

/// SID алгоритма хеширования по ГОСТ Р 34.11-94
#define ALG_SID_HASH_CPCSP    30
/// SID алгоритма шифрования по ГОСТ 28147-89
#define ALG_SID_ENCRYPT_CPCSP 30
/// SID алгоритма вычисления имитовставки по ГОСТ 28147-89
#define ALG_SID_G28147_MAC	31
/// SID алгоритма экспорта/импорта ключа по RFC 4357  (п. 6.3)
#define ALG_SID_PRO_EXP		31
/// SID алгоритма экспорта/импорта ключа по RFC 4357  (п. 6.1)
/// применяется для хранения и конвертации ключей
#define ALG_SID_SIMPLE_EXP    32
/// SID алгоритма выработки мастер ключа для протокола TLS на 
/// основе ГОСТ Р 34.10-2001
#define ALG_SID_TLS1_MASTER_HASH 32
/// SID алгоритма подписи по ГОСТ Р 34.10-2001
#define ALG_SID_SIGN_ELLIP    35
/// SID алгоритма согласования ключей Диффи-Хелмана на основе 
/// ГОСТ Р 34.10-2001
#define ALG_SID_DH_EL         36
/// SID алгоритма согласования ключей Диффи-Хелмана на основе 
/// ГОСТ Р 34.10-2001
/// для эфемерного ключа
#define ALG_SID_DH_EL_EPHEM	37
/// SID алгоритма экспорта/импорта ключа в формате Инфотекс.
/// Ключ экспортируется с дополнительной информацией, которая также
/// защищена имитовставкой.
#define ALG_SIG_ITCS_EXPORT   46
/// SID алгоритма вычисления имитовставки для алгоритма TLS на основе 
/// ГОСТ Р 34.10-2001
#define ALG_SID_SCHANNEL_MAC_KEY        3
/// SID алгоритма шифрования для алгоритма TLS на основе ГОСТ Р 34.10-2001
#define ALG_SID_SCHANNEL_ENC_KEY        7
/// SID алгоритма мастер ключа для протокола TLS на основе ГОСТ Р 34.10-2001
#define ALG_SID_TLS1_MASTER             6
/// SID алгоритма выработки симметричного ключа из мастер хеш-функции.
#define ALG_SID_MASTER_DERIVE_HASH 80

// ГОСТ ГОСТ Р 34.11-2012, ГОСТ Р 34.10-2012

/// SID алгоритма хеширования по ГОСТ Р 34.11-2012 с размером результата 
/// 256 бит
#define ALG_SID_HASH_2012_256BIT        33
/// SID алгоритма хеширования по ГОСТ Р 34.11-2012 с размером результата 
/// 512 бит
#define ALG_SID_HASH_2012_512BIT        34
/// SID алгоритма подписи по ГОСТ Р 34.10-2012 с длиной ключа 256 бит
#define ALG_SID_2012_256_SIGN_CSP       73
/// SID алгоритма подписи по ГОСТ Р 34.10-2012 с длиной ключа 512 бит
#define ALG_SID_2012_512_SIGN_CSP       61
/// SID алгоритма Диффи-Хелмана по ГОСТ Р 34.10-2012 с длиной ключа 256 бит
#define ALG_SID_2012_256_EXCHANGE_CSP        70
/// SID алгоритма Диффи-Хелмана по ГОСТ Р 34.10-2012 с длиной ключа 512 бит
#define ALG_SID_2012_512_EXCHANGE_CSP        66
/// SID алгоритма эфемерного Диффи-Хелмана по ГОСТ Р 34.10-2012 
/// с длиной ключа 256 бит
#define ALG_SID_2012_256_EXCHANGE_CSP_EPHEM  71
/// SID алгоритма эфемерного Диффи-Хелмана по ГОСТ Р 34.10-2012 
/// с длиной ключа 512 бит
#define ALG_SID_2012_512_EXCHANGE_CSP_EPHEM  67
/// SID алгоритма экспорта/импорта ключа по Р 50.1.113-2016
#define ALG_SID_PRO12_EXP     33
/// SID алгоритма псевдослучайной функции (PRF) протокола по Р 50.1.113-2016 
/// на основе функции хеширования с длиной выхода 256 бит
#define ALG_SID_TLS1PRF_2012_256		49
/// SID алгоритма псевдослучайной функции протокола по Р 50.1.113-2016 
/// на основе функции хеширования с длиной выхода 512 бит
#define ALG_SID_TLS1PRF_2012_512		50
/// SID алгоритма "ключевого мастера" по протоколу TLS на основе 
/// Рекомендаций по стандартизации ТК26 "Использование наборов алгоритмов 
/// шифрования на основе ГОСТ 28147-89 для протокола безопасности 
/// транспортного уровня." с длиной выхода 256 бит.
#define ALG_SID_TLS1_MASTER_HASH_2012_256 54
// SID алгоритма "ключевого мастера" по протоколу TLS на основе 
// Рекомендаций по стандартизации ТК26 "Использование наборов алгоритмов 
// шифрования на основе ГОСТ 28147-89 для протокола безопасности 
// транспортного уровня." с длиной выхода 512 бит. 
// На данный момент не поддерживается.
//#define ALG_SID_TLS1_MASTER_HASH_2012_512 55

/// SID алгоритма генерации парольного ключа PBKDF2 на основе хеша по ГОСТ Р 34.10-2012 с длиной ключа 512 бит
#define ALG_SID_PBKDF2_2012_512   58
/// SID алгоритма генерации парольного ключа PBKDF2 на основе хеша по ГОСТ Р 34.10-2012 с длиной ключа 256 бит
/// На данный момент не поддерживается.
//#define ALG_SID_PBKDF2_2012_256   59
/// SID алгоритма генерации парольного ключа PBKDF2 на основе хеша по ГОСТ Р 34.10-94
/// На данный момент не поддерживается.
//#define ALG_SID_PBKDF2_94_256     64

// ==================================================================
// CALG алгоритмов.
// ==================================================================
// ГОСТ 28147-89, ГОСТ Р 34.11-94, ГОСТ Р 34.10-2001
/// CALG алгоритма хеширования по ГОСТ Р 34.11-94
#define CPCSP_HASH_ID    (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HASH_CPCSP )
/// CALG алгоритма шифрования по ГОСТ 28147-89
#define CPCSP_ENCRYPT_ID (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_BLOCK | ALG_SID_ENCRYPT_CPCSP)
/// CALG алгоритма вычисления имитовставки по ГОСТ 28147-89
#define CPCSP_IMITO_ID   (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_G28147_MAC)
/// CALG алгоритма экспорта/импорта ключа по RFC 4357  (п. 6.3)
#define CALG_PRO_EXPORT (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_BLOCK | ALG_SID_PRO_EXP)
/// CALG алгоритма экспорта/импорта ключа по RFC 4357  (п. 6.1)
/// применяется для хранения и конвертации ключей
#define CALG_SIMPLE_EXPORT (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_BLOCK | ALG_SID_SIMPLE_EXP)
/// CALG алгоритма выработки мастер ключа для протокола TLS на 
/// основе ГОСТ Р 34.10-2001
#define CALG_TLS1_MASTER_HASH   (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1_MASTER_HASH )
/// CALG алгоритма подписи по ГОСТ Р 34.10-2001
#define ELLIP_SIGN_ID    (ALG_CLASS_SIGNATURE | ALG_TYPE_GR3410 | ALG_SID_SIGN_ELLIP)
/// CALG алгоритма согласования ключей Диффи-Хелмана на основе 
/// ГОСТ Р 34.10-2001
#define CPCSP_DH_EL_ID   (ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH |  ALG_SID_DH_EL)
/// CALG алгоритма согласования ключей Диффи-Хелмана на основе 
/// ГОСТ Р 34.10-2001
/// для эфемерного ключа
#define CALG_DH_EL_EPHEM   (ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH | ALG_SID_DH_EL_EPHEM)
/// CALG алгоритма экспорта/импорта ключа в формате Инфотекс.
/// Ключ экспортируется с дополнительной информацией, которая также
/// защищена имитовставкой.
#define CALG_ITCS_EXPORT (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_BLOCK | ALG_SIG_ITCS_EXPORT)
/// CALG алгоритма вычисления имитовставки для алгоритма TLS на основе 
/// ГОСТ Р 34.10-2001
#define CALG_TLS1_MAC_KEY (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_SECURECHANNEL | ALG_SID_SCHANNEL_MAC_KEY)
/// CALG алгоритма шифрования для алгоритма TLS на основе ГОСТ Р 34.10-2001
#define CALG_TLS1_ENC_KEY (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_SECURECHANNEL | ALG_SID_SCHANNEL_ENC_KEY)
/// CALG алгоритма выработки симметричного ключа из мастер хеша.
#define CALG_MASTER_DERIVE_HASH (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_MASTER_DERIVE_HASH )

// ГОСТ ГОСТ Р 34.11-2012, ГОСТ Р 34.10-2012
/// CALG алгоритма хеширования по ГОСТ Р 34.11-2012 с размером результата 
/// 256 бит
#define CSP_HASH_2012_256BIT_ID    ( ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HASH_2012_256BIT )
/// CALG алгоритма хеширования по ГОСТ Р 34.11-2012 с размером результата 
/// 512 бит
#define CSP_HASH_2012_512BIT_ID    ( ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_HASH_2012_512BIT )
/// CALG алгоритма подписи по ГОСТ Р 34.10-2012 с длиной ключа 256 бит
#define CSP_2012_256_SIGN_ID       (ALG_CLASS_SIGNATURE | ALG_TYPE_GR3410 | ALG_SID_2012_256_SIGN_CSP)
/// CALG алгоритма подписи по ГОСТ Р 34.10-2012 с длиной ключа 512 бит
#define CSP_2012_512_SIGN_ID       (ALG_CLASS_SIGNATURE | ALG_TYPE_GR3410 | ALG_SID_2012_512_SIGN_CSP)
/// CALG алгоритма Диффи-Хелмана по ГОСТ Р 34.10-2012 с длиной ключа 256 бит
#define CSP_2012_256_EXCHANGE_ID        (ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH |  ALG_SID_2012_256_EXCHANGE_CSP)
/// CALG алгоритма Диффи-Хелмана по ГОСТ Р 34.10-2012 с длиной ключа 512 бит
#define CSP_2012_512_EXCHANGE_ID        (ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH |  ALG_SID_2012_512_EXCHANGE_CSP)
/// CALG алгоритма эфемерного Диффи-Хелмана по ГОСТ Р 34.10-2012 
/// с длиной ключа 256 бит
#define CSP_2012_256_EXCHANGE_ID_EPHEM  (ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH |  ALG_SID_2012_256_EXCHANGE_CSP_EPHEM)
/// CALG алгоритма эфемерного Диффи-Хелмана по ГОСТ Р 34.10-2012 
/// с длиной ключа 512 бит
#define CSP_2012_512_EXCHANGE_ID_EPHEM  (ALG_CLASS_KEY_EXCHANGE | ALG_TYPE_DH |  ALG_SID_2012_512_EXCHANGE_CSP_EPHEM)
/// CALG алгоритма экспорта/импорта ключа по Р 50.1.113-2016
#define CALG_PRO12_EXPORT (ALG_CLASS_DATA_ENCRYPT | ALG_TYPE_BLOCK | ALG_SID_PRO12_EXP)
/// CALG алгоритма псевдослучайной функции (PRF) протокола по Р 50.1.113-2016 
/// на основе функции хеширования с длиной выхода 256 бит
#define CALG_TLS1PRF_2012_256 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1PRF_2012_256)
/// CALG алгоритма псевдослучайной функции (PRF) протокола по Р 50.1.113-2016 
/// на основе функции хеширования с длиной выхода 512 бит
#define CALG_TLS1PRF_2012_512 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1PRF_2012_512)
/// CALG алгоритма "ключевого мастера" по протоколу TLS на основе 
/// Рекомендаций по стандартизации ТК26 "Использование наборов алгоритмов 
/// шифрования на основе ГОСТ 28147-89 для протокола безопасности 
/// транспортного уровня." с длиной выхода 256 бит.
#define CALG_TLS1_MASTER_HASH_2012_256 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1_MASTER_HASH_2012_256 )
// CALG алгоритма "ключевого мастера" по протоколу TLS на основе 
// Рекомендаций по стандартизации ТК26 "Использование наборов алгоритмов 
// шифрования на основе ГОСТ 28147-89 для протокола безопасности 
// транспортного уровня." с длиной выхода 512 бит. 
// На данный момент не поддерживается.
//#define CALG_TLS1_MASTER_HASH_2012_512 (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_TLS1_MASTER_HASH_2012_512 )

/// CALG алгоритма генерации парольного ключа PBKDF2 на основе хеша по ГОСТ Р 34.10-94
/// На данный момент не поддерживается.
//#define CALG_PBKDF2_94_256     (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_PBKDF2_94_256)
/// CALG алгоритма генерации парольного ключа PBKDF2 на основе хеша по ГОСТ Р 34.10-2012 с длиной ключа 256 бит
/// На данный момент не поддерживается.
//#define CALG_PBKDF2_2012_256   (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_PBKDF2_2012_256)
/// CALG алгоритма генерации парольного ключа PBKDF2 на основе хеша по ГОСТ Р 34.10-2012 с длиной ключа 512 бит
#define CALG_PBKDF2_2012_512   (ALG_CLASS_HASH | ALG_TYPE_ANY | ALG_SID_PBKDF2_2012_512)

// ==================================================================
// OID алгоритмов.
// ==================================================================

// Корни. 

/// Корень ветки идентификации "КриптоПРО".
/// iso(1) member-body(2) ru(643) rans(2) cryptopro(2)
#define szOID_CPCSP_ALGORITHMS     "1.2.643.2.2"
/// Корень ветки идентификации "КриптоПРО". Unicode версия.
/// iso(1) member-body(2) ru(643) rans(2) cryptopro(2)
#define szOID_CPCSP_ALGORITHMS_W   L"1.2.643.2.2"
/// Ветка идентификации "Инфотекс". Устаревшее.
/// iso(1) iso-identified-organization(3) dod(6) internet(1) private(4) 
/// enterprises(1) infotecs(10812) vipnet(2) algorithm(1)
#define szOID_VIPNET_ALGORITHMS "1.3.6.1.4.1.10812.2.1"
/// Ветка идентификации "Инфотекс". Устаревшее. Unicode версия.
/// iso(1) iso-identified-organization(3) dod(6) internet(1) private(4) 
///  enterprises(1) infotecs(10812) vipnet(2) algorithm(1)
#define szOID_VIPNET_ALGORITHMS_W L"1.3.6.1.4.1.10812.2.1"
/// Ветка идентификации "Инфотекс".
/// iso(1) member-body(2) ru(643) rans(2) infotecs(4)
#define szOID_ITCS_ROOT "1.2.643.2.4"
/// Ветка идентификации "Инфотекс". Unicode версия.
/// iso(1) member-body(2) ru(643) rans(2) infotecs(4)
#define szOID_ITCS_ROOT_W L"1.2.643.2.4"
/// Ветка идентификации ТК26. 
/// iso(1) member-body(2) ru(643) rosstandart(7) tc26(1) 
/// vipnet(2) algorithm(1)
#define szOID_TC26_BASE                 "1.2.643.7.1"
/// Ветка идентификации ТК26. Unicode версия.
/// iso(1) member-body(2) ru(643) rosstandart(7) tc26(1) 
/// vipnet(2) algorithm(1)
#define szOID_TC26_BASE_W               L"1.2.643.7.1"

// ViPNet

// Алгоритмы ГОСТ 28147-89, ГОСТ Р 34.11-94, ГОСТ Р 34.10-2001

/// Алгоритм подписи ГОСТ Р 34.10-2001. RFC 4357. 
#define szOID_DOMEN_ELIP_SIGN_ALG  "1.2.643.2.2.19"
/// Алгоритм подписи ГОСТ Р 34.10-2001. RFC 4357. Unicode версия.
#define szOID_DOMEN_ELIP_SIGN_ALG_W   L"1.2.643.2.2.19"

/// Алгоритм шифрования ГОСТ 28147-89. RFC 4357. 
#define szOID_CPCSP_ENCRYPT_ALG     "1.2.643.2.2.21"
/// Алгоритм шифрования ГОСТ 28147-89. RFC 4357. Unicode версия.
#define szOID_CPCSP_ENCRYPT_ALG_W  L"1.2.643.2.2.21"

/// Алгоритм вычисления имитовставки. RFC 4357. ГОСТ 28147-89.
#define szOID_CPCSP_IMITO_ALG       "1.2.643.2.2.22"
/// Алгоритм вычисления имитовставки. RFC 4357. ГОСТ 28147-89.
#define szOID_CPCSP_IMITO_ALG_W     L"1.2.643.2.2.22"

/// Алгоритм выработки псевдослучайной последовательности (PRF) на основе 
/// ГОСТ Р 34.11-94
#define szOID_CPCSP_PRF_ALG         "1.2.643.2.2.23"
/// Алгоритм выработки псевдослучайной последовательности (PRF) на основе 
/// ГОСТ Р 34.11-94. Unicode версия.
#define szOID_CPCSP_PRF_ALG_W      L"1.2.643.2.2.23"

/// Алгоритм хеширования ГОСТ Р 34.11-94. RFC 4357. 
#define szOID_CPCSP_HASH_ALG       "1.2.643.2.2.9"
/// Алгоритм хеширования ГОСТ Р 34.11-94. RFC 4357. Unicode версия.
#define szOID_CPCSP_HASH_ALG_W    L"1.2.643.2.2.9"

/// Алгоритм вычисления HMAC на основе ГОСТ Р 34.11-94. RFC 4490.
#define szOID_CPCSP_HMAC_ALG       "1.2.643.2.2.10"
/// Алгоритм вычисления HMAC на основе ГОСТ Р 34.11-94. RFC 4490.  Unicode версия.
#define szOID_CPCSP_HMAC_ALG_W    L"1.2.643.2.2.10"

/// Совмещенный алгоритм хеширование по ГОСТ Р 34.11-94 + 
/// подпись по ГОСТ Р 34.10-2001. RFC 4357. 
#define szOID_CPCSP_HASH_SIGN_EL_ALG  "1.2.643.2.2.3"
/// Совмещенный алгоритм хеширование по ГОСТ Р 34.11-94 + 
/// подпись по ГОСТ Р 34.10-2001. RFC 4357. Unicode версия.
#define szOID_CPCSP_HASH_SIGN_EL_ALG_W  L"1.2.643.2.2.3"

/// Алгоритма согласования ключей Диффи-Хелмана на основе 
/// ГОСТ Р 34.10-2001. RFC 4357.
#define szOID_DH_EL_KEY_ALG        "1.2.643.2.2.98"
/// Алгоритма согласования ключей Диффи-Хелмана на основе 
/// ГОСТ Р 34.10-2001. RFC 4357. Unicode версия.
#define szOID_DH_EL_KEY_ALG_W      L"1.2.643.2.2.98"

// Параметры алгоритмов ГОСТ 28147-89, ГОСТ Р 34.11-94, ГОСТ Р 34.10-2001

/// Параметры алгоритма хеширования по ГОСТ Р 34.11-94. 
/// Верба-О хеширования, значение по умолчанию. RFC 4357. 
#define szOID_CPCSP_HASH_DEF_PARAM "1.2.643.2.2.30.1"
/// Параметры алгоритма хеширования ГОСТ Р 34.11-94. 
/// Верба-О хеширования, значение по умолчанию. RFC 4357. Unicode версия.
#define szOID_CPCSP_HASH_DEF_PARAM_W L"1.2.643.2.2.30.1"

/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// Верба-О шифрование, значение по умолчанию. RFC 4357.
#define szOID_CPCSP_ENCR_DEF_PARAM "1.2.643.2.2.31.1"
/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// Верба-О шифрование, значение по умолчанию. RFC 4357. Unicode версия.
#define szOID_CPCSP_ENCR_DEF_PARAM_W L"1.2.643.2.2.31.1"

/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// B ParamSet. RFC 4357.
#define szOID_CPCSP_ENCR_B_PARAM   "1.2.643.2.2.31.2"
/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// B ParamSet. RFC 4357. Unicode версия.
#define szOID_CPCSP_ENCR_B_PARAM_W L"1.2.643.2.2.31.2"

/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// C ParamSet. RFC 4357.
#define szOID_CPCSP_ENCR_C_PARAM   "1.2.643.2.2.31.3"
/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// C ParamSet. RFC 4357. Unicode версия.
#define szOID_CPCSP_ENCR_C_PARAM_W L"1.2.643.2.2.31.3"

/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// D ParamSet. RFC 4357.
#define szOID_CPCSP_ENCR_D_PARAM   "1.2.643.2.2.31.4"
/// Параметры алгоритма шифрования по ГОСТ 28147-89
/// D ParamSet. RFC 4357. Unicode версия.
#define szOID_CPCSP_ENCR_D_PARAM_W L"1.2.643.2.2.31.4"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2001
/// A ParamSet, значение по умолчанию. RFC 4357.
#define szOID_CPCSP_EL_SIGN_DEF_PARAM "1.2.643.2.2.35.1"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2001
/// A ParamSet, значение по умолчанию. RFC 4357. Unicode версия.
#define szOID_CPCSP_EL_SIGN_DEF_PARAM_W L"1.2.643.2.2.35.1"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2001
/// B ParamSet, Оскар-2x. RFC 4357.
#define szOID_CPCSP_EL_SIGN_1_PARAM "1.2.643.2.2.35.2"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2001
/// B ParamSet, Оскар-2x. RFC 4357. Unicode версия.
#define szOID_CPCSP_EL_SIGN_1_PARAM_W L"1.2.643.2.2.35.2"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2001
/// C ParamSet. RFC 4357.
#define szOID_CPCSP_EL_SIGN_2_PARAM "1.2.643.2.2.35.3"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2001
/// C ParamSet. RFC 4357. Unicode версия.
#define szOID_CPCSP_EL_SIGN_2_PARAM_W L"1.2.643.2.2.35.3"

/// Параметры алгоритма exchange по ГОСТ Р 34.10-2001
/// A ParamSet. RFC 4357.
#define szOID_CPCSP_EL_DH_DEF_PARAM  "1.2.643.2.2.36.0"
/// Параметры алгоритма exchange по ГОСТ Р 34.10-2001
/// A ParamSet. RFC 4357. Unicode версия.
#define szOID_CPCSP_EL_DH_DEF_PARAM_W  L"1.2.643.2.2.36.0"

/// Параметры алгоритма exchange по ГОСТ Р 34.10-2001
/// B ParamSet. RFC 4357.
#define szOID_CPCSP_EL_DH_1_PARAM    "1.2.643.2.2.36.1"
/// Параметры алгоритма exchange по ГОСТ Р 34.10-2001
/// B ParamSet. RFC 4357. Unicode версия.
#define szOID_CPCSP_EL_DH_1_PARAM_W    L"1.2.643.2.2.36.1"

// Определение алгоритмов ГОСТ Р 34.10-2012 и ГОСТ Р 34.11-2012

/// Алгоритм подписи ГОСТ Р 34.10-2012 с длиной ключа 256 бит.
#define szOID_CSP2012_SIGN_256          "1.2.643.7.1.1.1.1"
/// Алгоритм подписи ГОСТ Р 34.10-2012 с длиной ключа 256 бит.
/// Unicode версия.
#define szOID_CSP2012_SIGN_256_W        L"1.2.643.7.1.1.1.1"

/// Алгоритм подписи ГОСТ Р 34.10-2012 с длиной ключа 512 бит.
#define szOID_CSP2012_SIGN_512          "1.2.643.7.1.1.1.2"
/// Алгоритм подписи ГОСТ Р 34.10-2012 с длиной ключа 512 бит.
/// Unicode версия.
#define szOID_CSP2012_SIGN_512_W        L"1.2.643.7.1.1.1.2"

/// Алгоритм хеширования ГОСТ Р 34.11-2012 с длиной выхода 256 бит.
#define szOID_CSP2012_HASH_256          "1.2.643.7.1.1.2.2"
/// Алгоритм хеширования ГОСТ Р 34.11-2012 с длиной выхода 256 бит.
/// Unicode версия.
#define szOID_CSP2012_HASH_256_W        L"1.2.643.7.1.1.2.2"
/// Алгоритм хеширования ГОСТ Р 34.11-2012 с длиной выхода 512 бит.
#define szOID_CSP2012_HASH_512          "1.2.643.7.1.1.2.3"
/// Алгоритм хеширования ГОСТ Р 34.11-2012 с длиной выхода 512 бит.
/// Unicode версия.
#define szOID_CSP2012_HASH_512_W        L"1.2.643.7.1.1.2.3"

/// Совмещенный алгоритм хеширование по ГОСТ Р 34.11-2012
/// и подпись по ГОСТ Р 34.10-2012 с длиной ключа 256 бит.
#define szOID_CSP2012_HASH_SIGN_256     "1.2.643.7.1.1.3.2"
/// Совмещенный алгоритм хеширование по ГОСТ Р 34.11-2012
/// и подпись по ГОСТ Р 34.10-2012 с длиной ключа 256 бит.
/// Unicode версия.
#define szOID_CSP2012_HASH_SIGN_256_W   L"1.2.643.7.1.1.3.2"
/// Совмещенный алгоритм хеширование по ГОСТ Р 34.11-2012
/// и подпись по ГОСТ Р 34.10-2012 с длиной ключа 256 бит.
#define szOID_CSP2012_HASH_SIGN_512     "1.2.643.7.1.1.3.3"
/// Совмещенный алгоритм хеширование по ГОСТ Р 34.11-2012
/// и подпись по ГОСТ Р 34.10-2012 с длиной ключа 256 бит.
/// Unicode версия.
#define szOID_CSP2012_HASH_SIGN_512_W   L"1.2.643.7.1.1.3.3"

/// Алгоритм HMAC на основе ГОСТ Р 34.10-2012 с длиной выхода 256 бит
/// по Р 50.1.113-2016
#define szOID_CSP2012_HMAC_256          "1.2.643.7.1.1.4.1"
/// Алгоритм HMAC на основе ГОСТ Р 34.10-2012 с длиной выхода 256 бит
/// по Р 50.1.113-2016. Unicode версия.
#define szOID_CSP2012_HMAC_256_W        L"1.2.643.7.1.1.4.1"
/// Алгоритм HMAC на основе ГОСТ Р 34.10-2012 с длиной выхода 512 бит
/// по Р 50.1.113-2016
#define szOID_CSP2012_HMAC_512          "1.2.643.7.1.1.4.2"
/// Алгоритм HMAC на основе ГОСТ Р 34.10-2012 с длиной выхода 512 бит
/// по Р 50.1.113-2016. Unicode версия.
#define szOID_CSP2012_HMAC_512_W        L"1.2.643.7.1.1.4.2"

/// Алгоритм согласования ключей на основе ГОСТ Р 34.10-2012 с длиной выхода 256 бит
/// по Р 50.1.113-2016.
#define szOID_CSP2012_EXCHANGE_256     "1.2.643.7.1.1.6.1"
/// Алгоритм согласования ключей на основе ГОСТ Р 34.10-2012 с длиной выхода 256 бит
/// по Р 50.1.113-2016. Unicode версия.
#define szOID_CSP2012_EXCHANGE_256_W   L"1.2.643.7.1.1.6.1"
/// Алгоритм согласования ключей на основе ГОСТ Р 34.10-2012 с длиной выхода 512 бит
/// по Р 50.1.113-2016. 
#define szOID_CSP2012_EXCHANGE_512     "1.2.643.7.1.1.6.2"
/// Алгоритм согласования ключей на основе ГОСТ Р 34.10-2012 с длиной выхода 512 бит
/// по Р 50.1.113-2016. Unicode версия.
#define szOID_CSP2012_EXCHANGE_512_W   L"1.2.643.7.1.1.6.2"

// Параметры алгоритмов ГОСТ Р 34.10-2012 и ГОСТ Р 34.11-2012
// а так же сопутствующие их применению

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// A ParamSet по Р 50.1.114-2016. Скрученные кривые Эдвардса.
#define szOID_CSP2012_SIGN_256_PARAM_A       "1.2.643.7.1.2.1.1.1"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// A ParamSet по Р 50.1.114-2016. Скрученные кривые Эдвардса.
/// Unicode версия.
#define szOID_CSP2012_SIGN_256_PARAM_A_W     L"1.2.643.7.1.2.1.1.1"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// B ParamSet по (документ не принят). 
#define szOID_CSP2012_SIGN_256_PARAM_B       "1.2.643.7.1.2.1.1.2"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// B ParamSet по (документ не принят). Unicode версия.
#define szOID_CSP2012_SIGN_256_PARAM_B_W     L"1.2.643.7.1.2.1.1.2"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// C ParamSet по (документ не принят). 
#define szOID_CSP2012_SIGN_256_PARAM_C       "1.2.643.7.1.2.1.1.3"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// C ParamSet по (документ не принят). Unicode версия.
#define szOID_CSP2012_SIGN_256_PARAM_C_W     L"1.2.643.7.1.2.1.1.3"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// D ParamSet по (документ не принят). 
#define szOID_CSP2012_SIGN_256_PARAM_D       "1.2.643.7.1.2.1.1.4"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// D ParamSet по (документ не принят). Unicode версия.
#define szOID_CSP2012_SIGN_256_PARAM_D_W     L"1.2.643.7.1.2.1.1.4"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// A ParamSet по Р 50.1.114-2016.
#define szOID_CSP2012_SIGN_512_PARAM_A       "1.2.643.7.1.2.1.2.1"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// A ParamSet по Р 50.1.114-2016. Unicode версия.
#define szOID_CSP2012_SIGN_512_PARAM_A_W     L"1.2.643.7.1.2.1.2.1"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// B ParamSet по Р 50.1.114-2016.
#define szOID_CSP2012_SIGN_512_PARAM_B       "1.2.643.7.1.2.1.2.2"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// B ParamSet по Р 50.1.114-2016. Unicode версия.
#define szOID_CSP2012_SIGN_512_PARAM_B_W     L"1.2.643.7.1.2.1.2.2"

/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// C ParamSet по Р 50.1.114-2016. Скрученные кривые Эдвардса.
#define szOID_CSP2012_SIGN_512_PARAM_C       "1.2.643.7.1.2.1.2.3"
/// Параметры алгоритма подписи по ГОСТ Р 34.10-2012
/// C ParamSet по Р 50.1.114-2016. Скрученные кривые Эдвардса.
/// Unicode версия.
#define szOID_CSP2012_SIGN_512_PARAM_C_W     L"1.2.643.7.1.2.1.2.3"

/// Параметры алгоритма шифрования по ГОСТ 28147-89, введенные
/// одновременно с алгоритмами ГОСТ Р 34.10-2012 и ГОСТ Р 34.11-2012
/// в соответствии с Рекомендации по стандартизации
/// "Задание узлов замены блока подстановки алгоритма шифрования
/// ГОСТ 28147". Известный так же как ParamSet Z и ParamSet ISO.
#define szOID_CSP2012_ENCRYPT_PARAM     "1.2.643.7.1.2.5.1.1"
/// Параметры алгоритма шифрования по ГОСТ 28147-89, введенные
/// одновременно с алгоритмами ГОСТ Р 34.10-2012 и ГОСТ Р 34.11-2012
/// в соответствии с Рекомендации по стандартизации
/// "Задание узлов замены блока подстановки алгоритма шифрования
/// ГОСТ 28147". Известный так же как ParamSet Z и ParamSet ISO.
/// Unicode версия.
#define szOID_CSP2012_ENCRYPT_PARAM_W  L"1.2.643.7.1.2.5.1.1"

// Расширения и атрибуты сертификатов и запросов на сертификат

/// Использование ключа (KeyUsage) для прокси сертификата при построении 
/// TLS соединения.
#define szOID_CPCSP_TLS_PROXY           "1.2.643.2.2.34.1"
/// Использование ключа (KeyUsage) для прокси сертификата при построении 
/// TLS соединения. Unicode версия.
#define szOID_CPCSP_TLS_PROXY_W        L"1.2.643.2.2.34.1"

/// Идентификатор в запросе на сертификат желаемого срока действия
/// сертификата. Unicode версия.
#define szOID_REQUEST_VALIDITY "1.2.643.2.4.1.1.1.1.2"
/// Идентификатор в запросе на сертификат желаемого срока действия
/// сертификата. Unicode версия.
#define szOID_REQUEST_VALIDITY_W L"1.2.643.2.4.1.1.1.1.2"

// ==================================================================
// Флаги изменяющее поведение стандартных функций.
// ==================================================================

// Дополнительные флаги функций Crypto API 1.0 и CP

/// Флаг для функции CryptExportKey, изменяющий формат экспортируемого 
/// блоба на PKCS #8
#define CRYPT_PKCS8_KEY_BAG  CRYPT_VOLATILE

// Дополнительные флаги CryptMsgOpenToEncode и CryptMsgControl

/// Дополнительный флаг к функциям CryptMsgOpenToEncode и CryptMsgControl
/// Если не удалось добавить CADES-BES атрибуты, функции CryptMsgOpenToEncode и 
/// CryptMsgControl вернут ошибку. Данный флаг не может быть указан одновременно 
/// с флагом CMSG_CADES_DISABLE. 
#define CMSG_CADES_STRICT                         (0x00000100)
/// Дополнительный флаг к функциям CryptMsgOpenToEncode и CryptMsgControl
/// Отключает добавление атрибутов CADES-BES. Данный флаг не может быть указан 
/// одновременно с флагом CMSG_CADES_STRICT. 
#define CMSG_CADES_DISABLE                        (0x00000200)
/// Дополнительный флаг к функциям CryptMsgOpenToEncode и CryptMsgControl
/// Отключает поиск сертификата подписывающего в хранилищах "Личные" 
/// текущего пользователя и локального компьютера. 
#define CMSG_CADES_DISABLE_CERT_SEARCH            (0x00000400)

// Дополнительные флаги CryptSignMessage

/// Дополнительный флаг к функции CryptSignMessage
/// Если не удалось добавить CADES-BES атрибуты, функция CryptSignMessage
/// вернут ошибку. Данный флаг не может быть указан одновременно 
/// с флагом CRYPT_MESSAGE_CADES_DISABLE. 
#define CRYPT_MESSAGE_CADES_STRICT                CMSG_CADES_STRICT
/// Дополнительный флаг к функции CryptSignMessage
/// Отключает добавление атрибутов CADES-BES. Данный флаг не может быть указан 
/// одновременно с флагом CRYPT_MESSAGE_CADES_STRICT. 
#define CRYPT_MESSAGE_CADES_DISABLE               CMSG_CADES_DISABLE

#endif
